{"version":3,"sources":["assets\\Scripts\\Main\\condition.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["let DEFAULT_PROP = {\r\n    CHR: 0,      // 颜值 charm CHR\r\n    INT: 0,      // 智力 intelligence INT\r\n    STR: 0,      // 体质 strength STR\r\n    MNY: 0,      // 家境 money MNY\r\n    SPR: 0,      // 快乐 spirit SPR\r\n    LIF: 1,      // 生命 life LIF\r\n    TLT: [],    // 天赋 talent TLT\r\n    EVT: [],    // 事件 event EVT\r\n    AGE: 0,    // 年龄\r\n};\r\n\r\nlet DEFAULT_CJ = {\r\n    TMS: 0,      // 重开次数\r\n    HAGE: 0,     // 最大年龄\r\n    SUM: 0,       //最大总评\r\n\r\n    HCHR: 0,      // 最大颜值\r\n    HINT: 0,      // 最大智力\r\n    HSTR: 0,      // 最大体质\r\n    HMNY: 0,      // 最大家境\r\n    HSPR: 0,       // 最大快乐\r\n\r\n    LCHR: 0,      // 最小颜值\r\n    LINT: 0,      // 最小智力\r\n    LSTR: 0,      // 最小体质\r\n    LMNY: 0,      // 最小家境\r\n    LSPR: 0,      // 最小快乐\r\n\r\n    AEVT:[],    // 经历过的事件\r\n    ATLT:[],    // 选择过的天赋\r\n    ACJ:[],     //完成的成就\r\n};\r\n\r\nfunction getProp(prop) {\r\n    switch(prop) {\r\n        case 'CHR':\r\n        case 'INT':\r\n        case 'STR':\r\n        case 'MNY':\r\n        case 'SPR':\r\n        case 'LIF':\r\n        case 'TLT':\r\n        case 'AGE':\r\n        case 'EVT': return DEFAULT_PROP[prop];\r\n        case \"TMS\":\r\n        case \"HAGE\":\r\n        case \"SUM\":\r\n        case \"HCHR\":\r\n        case \"HINT\":\r\n        case \"HSTR\":\r\n        case \"HMNY\":\r\n        case \"HSPR\":\r\n        case \"LCHR\":\r\n        case \"LINT\":\r\n        case \"LSTR\":\r\n        case \"LMNY\":\r\n        case \"LSPR\":\r\n        case \"AEVT\":\r\n        case \"ATLT\":\r\n        case \"ACJ\":return DEFAULT_CJ[prop]\r\n\r\n        default: return null;\r\n    }\r\n}\r\n\r\nfunction check(condition,type?:string) {\r\n    if(condition==undefined){\r\n        if(type==\"include\"){\r\n            return true\r\n            \r\n        }else{\r\n            return false\r\n        }\r\n    }else{\r\n        const conditions = parseCondition(condition);\r\n        //cc.log(condition,checkParsedCondition(conditions))\r\n        return checkParsedCondition(conditions);\r\n    }\r\n}\r\n\r\nfunction checkParsedCondition(conditions) {\r\n    if(!Array.isArray(conditions)) return checkLogic(conditions);\r\n    if(conditions.length == 0) return true;\r\n    if(conditions.length == 1) return checkParsedCondition(conditions[0]);\r\n\r\n    let ret = checkParsedCondition(conditions[0]);\r\n    for(let i=1; i<conditions.length; i+=2) {\r\n        switch(conditions[i]) {\r\n            case '&':\r\n                if(ret) ret = checkParsedCondition(conditions[i+1]);\r\n                break;\r\n            case '|':\r\n                if(ret) return true;\r\n                ret = checkParsedCondition(conditions[i+1]);\r\n                break;\r\n            default: return false;\r\n        }\r\n    }\r\n    return ret;\r\n\r\n}\r\n\r\nfunction checkLogic(condition) {\r\n    const length = condition.length;\r\n    let i = condition.search(/[><\\!\\?=]/);\r\n\r\n    const prop = condition.substring(0,i);\r\n    const symbol = condition.substring(i, i+=(condition[i+1]=='='?2:1));\r\n    const d = condition.substring(i, length);\r\n\r\n    const propData = getProp(prop);\r\n    const conditionData = d[0]=='['? JSON.parse(d): Number(d);\r\n\r\n    switch(symbol) {\r\n        case '>':  return propData >  conditionData;\r\n        case '<':  return propData <  conditionData;\r\n        case '>=': return propData >= conditionData;\r\n        case '<=': return propData <= conditionData;\r\n        case '=':\r\n            if(Array.isArray(propData))\r\n                return propData.includes(conditionData);\r\n            return propData == conditionData;\r\n        case '!=':\r\n            if(Array.isArray(propData))\r\n                return !propData.includes(conditionData);\r\n            return propData == conditionData;\r\n        case '?':\r\n            if(Array.isArray(propData)) {\r\n                for(const p of propData)\r\n                    if(conditionData.includes(p)) return true;\r\n                return false;\r\n            }\r\n            return conditionData.includes(propData);\r\n        case '!':\r\n            if(Array.isArray(propData)) {\r\n                for(const p of propData)\r\n                    if(conditionData.includes(p)) return false;\r\n                return true;\r\n            }\r\n            return !conditionData.includes(propData);\r\n\r\n        default: return false;\r\n    }\r\n}\r\n\r\nfunction parseCondition(condition) {\r\n    const conditions = [];\r\n    \r\n    const length = condition.length;\r\n    const stack = [];\r\n    stack.unshift(conditions);\r\n    let cursor = 0;\r\n    const catchString = i => {\r\n        const str = condition.substring(cursor, i).trim();\r\n        cursor = i;\r\n        if(str) stack[0].push(str);\r\n    };\r\n\r\n    for(let i=0; i<length; i++) {\r\n        switch(condition[i]) {\r\n            case ' ': continue;\r\n\r\n            case '(':\r\n                catchString(i);\r\n                cursor ++;\r\n                const sub = [];\r\n                stack[0].push(sub);\r\n                stack.unshift(sub);\r\n                break;\r\n\r\n            case ')':\r\n                catchString(i);\r\n                cursor ++;\r\n                stack.shift();\r\n                break;\r\n\r\n            case '|':\r\n            case '&':\r\n                catchString(i);\r\n                catchString(i+1);\r\n                break;\r\n            default: continue;\r\n        }\r\n    }\r\n\r\n    catchString(length);\r\n\r\n    return conditions;\r\n}\r\nexport { parseCondition,checkLogic,checkParsedCondition,check,getProp,DEFAULT_PROP,DEFAULT_CJ};"]}